/*
 * Formulario de cadastro de produtos
 */
package estoque;

/**
 *
 * @author Fabiano, Antonio
 */
import classe.ApenasNumeros;
import classe.Exportacao;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.lang.System.Logger;
import java.lang.System.Logger.Level;
import java.util.regex.PatternSyntaxException;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
public class FrmCadastroProduto extends javax.swing.JFrame {
    String modo;

    /**
     * Creates new form FrmCadastroProduto
     */
    public FrmCadastroProduto() 
    {
        initComponents();
        tfCodigoProduto.setDocument(new ApenasNumeros());
        manipulaInterface("Navegar");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlFundoCadastroProdutos = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProdutos = new javax.swing.JTable();
        pnlDadosdosProdutos = new javax.swing.JPanel();
        lblCodigoProduto = new javax.swing.JLabel();
        lbldescricaoProduto = new javax.swing.JLabel();
        lblQuantidade = new javax.swing.JLabel();
        lblQuantidade1 = new javax.swing.JLabel();
        tfDescricaoProduto = new javax.swing.JTextField();
        tfQuantidade = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        tfCodigoProduto = new javax.swing.JTextField();
        tfPrecoUnitario = new javax.swing.JFormattedTextField();
        btnIncluir = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnConsultar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnExportarCSV = new javax.swing.JButton();
        btnImportarCSV = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Produtos");

        pnlFundoCadastroProdutos.setBackground(new java.awt.Color(0, 204, 204));
        pnlFundoCadastroProdutos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cadastro de Produtos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N

        tblProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descrição", "Qnt. em Estoque", "Preço Unitario"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProdutosMouseClicked(evt);
            }
        });
        tblProdutos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblProdutosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblProdutos);

        pnlDadosdosProdutos.setBackground(new java.awt.Color(0, 204, 204));
        pnlDadosdosProdutos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cadastro de Produtos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N

        lblCodigoProduto.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCodigoProduto.setForeground(new java.awt.Color(255, 255, 255));
        lblCodigoProduto.setText("Codigo:");

        lbldescricaoProduto.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbldescricaoProduto.setForeground(new java.awt.Color(255, 255, 255));
        lbldescricaoProduto.setText("Descrição: ");

        lblQuantidade.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblQuantidade.setForeground(new java.awt.Color(255, 255, 255));
        lblQuantidade.setText("Qnt. em Estoque: ");

        lblQuantidade1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblQuantidade1.setForeground(new java.awt.Color(255, 255, 255));
        lblQuantidade1.setText("Preço Unitario:");

        tfQuantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfQuantidadeKeyTyped(evt);
            }
        });

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/iconfinder_search_1608826 (2).png"))); // NOI18N
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tfCodigoProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfCodigoProdutoKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout pnlDadosdosProdutosLayout = new javax.swing.GroupLayout(pnlDadosdosProdutos);
        pnlDadosdosProdutos.setLayout(pnlDadosdosProdutosLayout);
        pnlDadosdosProdutosLayout.setHorizontalGroup(
            pnlDadosdosProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosdosProdutosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDadosdosProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDadosdosProdutosLayout.createSequentialGroup()
                        .addGroup(pnlDadosdosProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblQuantidade1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblQuantidade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlDadosdosProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfQuantidade, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                            .addComponent(tfPrecoUnitario)))
                    .addGroup(pnlDadosdosProdutosLayout.createSequentialGroup()
                        .addGroup(pnlDadosdosProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbldescricaoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlDadosdosProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDadosdosProdutosLayout.createSequentialGroup()
                                .addComponent(tfCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(tfDescricaoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        pnlDadosdosProdutosLayout.setVerticalGroup(
            pnlDadosdosProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosdosProdutosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDadosdosProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlDadosdosProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlDadosdosProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbldescricaoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfDescricaoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDadosdosProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(pnlDadosdosProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuantidade1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfPrecoUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        btnIncluir.setText("Incluir");
        btnIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirActionPerformed(evt);
            }
        });

        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnExportarCSV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/exportacao.png"))); // NOI18N
        btnExportarCSV.setText("Exportar CSV");
        btnExportarCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarCSVActionPerformed(evt);
            }
        });

        btnImportarCSV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/importar.png"))); // NOI18N
        btnImportarCSV.setText("Importar CSV");
        btnImportarCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportarCSVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFundoCadastroProdutosLayout = new javax.swing.GroupLayout(pnlFundoCadastroProdutos);
        pnlFundoCadastroProdutos.setLayout(pnlFundoCadastroProdutosLayout);
        pnlFundoCadastroProdutosLayout.setHorizontalGroup(
            pnlFundoCadastroProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFundoCadastroProdutosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFundoCadastroProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlDadosdosProdutos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlFundoCadastroProdutosLayout.createSequentialGroup()
                        .addComponent(btnIncluir)
                        .addGap(18, 18, 18)
                        .addGroup(pnlFundoCadastroProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlFundoCadastroProdutosLayout.createSequentialGroup()
                                .addComponent(btnAlterar)
                                .addGap(18, 18, 18)
                                .addComponent(btnExcluir))
                            .addComponent(btnExportarCSV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(pnlFundoCadastroProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlFundoCadastroProdutosLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btnConsultar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSalvar)
                                .addGap(18, 18, 18)
                                .addComponent(btnCancelar)
                                .addGap(26, 26, 26))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFundoCadastroProdutosLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnImportarCSV, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(199, 199, 199)))))
                .addContainerGap())
        );
        pnlFundoCadastroProdutosLayout.setVerticalGroup(
            pnlFundoCadastroProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFundoCadastroProdutosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlDadosdosProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlFundoCadastroProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIncluir)
                    .addComponent(btnAlterar)
                    .addComponent(btnExcluir)
                    .addComponent(btnConsultar)
                    .addComponent(btnSalvar)
                    .addComponent(btnCancelar))
                .addGap(35, 35, 35)
                .addGroup(pnlFundoCadastroProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExportarCSV, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnImportarCSV, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlFundoCadastroProdutos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlFundoCadastroProdutos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public boolean checkNumbers(String str)
    {
        return str.matches("[^1-100]");
    } 
    
    public void cleanCampos()
    {
        tfCodigoProduto.setText("");
        tfDescricaoProduto.setText("");
        tfPrecoUnitario.setText("");
        tfQuantidade.setText("");
    }
    
    public void manipulaInterface(String modo)
    {
        switch(modo){
            case "Navegar":
                btnSalvar.setEnabled(false);
                btnCancelar.setEnabled(false);
                tfCodigoProduto.setEnabled(false);
                tfDescricaoProduto.setEnabled(false);
                btnIncluir.setEnabled(true);
                btnAlterar.setEnabled(false);
                btnExcluir.setEnabled(false);
                tfQuantidade.setEnabled(false);
                tfPrecoUnitario.setEnabled(false);
                btnSearch.setEnabled(false);
                btnConsultar.setEnabled(false);
                break;
            
            case "Novo":
                btnSalvar.setEnabled(true);
                btnCancelar.setEnabled(true);
                tfCodigoProduto.setEnabled(true);
                tfDescricaoProduto.setEnabled(true);
                btnIncluir.setEnabled(false);
                btnAlterar.setEnabled(false);
                btnExcluir.setEnabled(false);
                tfQuantidade.setEnabled(true);
                tfPrecoUnitario.setEnabled(true);
                btnSearch.setEnabled(false);
                btnConsultar.setEnabled(false);
                break;
                
            case "Editar":
                btnSalvar.setEnabled(true);
                btnCancelar.setEnabled(true);
                tfCodigoProduto.setEnabled(true);
                tfDescricaoProduto.setEnabled(true);
                btnIncluir.setEnabled(true);
                btnAlterar.setEnabled(false);
                btnExcluir.setEnabled(false);
                tfQuantidade.setEnabled(true);
                tfPrecoUnitario.setEnabled(true);
                break;
                
            case "Excluir":
                btnSalvar.setEnabled(false);
                btnCancelar.setEnabled(false);
                tfCodigoProduto.setEnabled(false);
                tfDescricaoProduto.setEnabled(false);
                btnIncluir.setEnabled(true);
                btnAlterar.setEnabled(false);
                btnExcluir.setEnabled(false);
                tfQuantidade.setEnabled(false);
                tfPrecoUnitario.setEnabled(false);
                btnConsultar.setEnabled(false);
                btnSearch.setEnabled(false);
                break;
                
            case "Selecao":
//                btn_func_salvar.setEnabled(false);
//                btn_func_cancelar.setEnabled(false);
//                c_func_mat.setEnabled(false);
//                c_func_nome.setEnabled(false);
//                cb_func_deps.setEnabled(false);
//                btn_func_novo.setEnabled(true);
//                btn_func_editar.setEnabled(true);
//                btn_func_excluir.setEnabled(true);
                break;
            case "Salvar":
                btnSalvar.setEnabled(true);
                btnCancelar.setEnabled(true);
                tfCodigoProduto.setEnabled(true);
                tfDescricaoProduto.setEnabled(true);
                btnIncluir.setEnabled(false);
                btnAlterar.setEnabled(true);
                btnExcluir.setEnabled(true);
                tfQuantidade.setEnabled(true);
                tfPrecoUnitario.setEnabled(true);
                btnSearch.setEnabled(true);
                btnConsultar.setEnabled(true);
                break;
            default: System.out.println("Modo invalido");
        }
    }
    
    private void tfCodigoProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfCodigoProdutoKeyPressed
        
    }//GEN-LAST:event_tfCodigoProdutoKeyPressed

    private void btnIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirActionPerformed
        cleanCampos();
        manipulaInterface("Novo");
    }//GEN-LAST:event_btnIncluirActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        DefaultTableModel tbm = (DefaultTableModel) tblProdutos.getModel();
        
        int cod = 0, temp = Integer.parseInt(tfCodigoProduto.getText());
        String dec;
        float quant, preco;
        try
        {
            if (temp >= 1 && temp <= 100)
            {
                cod = Integer.parseInt(tfCodigoProduto.getText());
                dec = tfDescricaoProduto.getText();
                quant = Float.parseFloat(tfQuantidade.getText());
                preco = Float.parseFloat(tfPrecoUnitario.getText());
                Object[] dados = {cod, dec, quant, preco};
                tbm.addRow(dados);
                cleanCampos();
            } 
            else 
            {
                JOptionPane.showMessageDialog(this, "Permitidos paneas Numeros de 1 a 100\nDigite o codigo novamente", "Alerta", 1);
                tfCodigoProduto.setText("");
                tfCodigoProduto.setFocusable(true);
            }
        }
        catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(this, "Erro ao entrar dados\nReinicie a operação", "ERRO", 3);
            cleanCampos();
        }
        
            
            
        
        
        manipulaInterface("Salvar");
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        
        DefaultTableModel tbm = (DefaultTableModel) tblProdutos.getModel();
        if(tblProdutos.getSelectedRow() != -1)
        {
            tbm.removeRow(tblProdutos.getSelectedRow());
            cleanCampos();
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Nenhuma linha selecionada", "Alerta", 2);
        }
        manipulaInterface("Excluir");
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void tblProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProdutosMouseClicked
 
        if(tblProdutos.getSelectedRow() != -1)
        {
            tfCodigoProduto.setText(tblProdutos.getValueAt(tblProdutos.getSelectedRow(), 0).toString());
            tfDescricaoProduto.setText(tblProdutos.getValueAt(tblProdutos.getSelectedRow(), 1).toString());
            tfQuantidade.setText(tblProdutos.getValueAt(tblProdutos.getSelectedRow(), 2).toString());
            tfPrecoUnitario.setText(tblProdutos.getValueAt(tblProdutos.getSelectedRow(), 3).toString());
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Nenhuma linha selecionada", "Alerta", 2);
        }
        
    }//GEN-LAST:event_tblProdutosMouseClicked

    private void tblProdutosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblProdutosKeyReleased
        if(tblProdutos.getSelectedRow() != -1)
        {
            tfCodigoProduto.setText(tblProdutos.getValueAt(tblProdutos.getSelectedRow(), 0).toString());
            tfDescricaoProduto.setText(tblProdutos.getValueAt(tblProdutos.getSelectedRow(), 1).toString());
            tfQuantidade.setText(tblProdutos.getValueAt(tblProdutos.getSelectedRow(), 2).toString());
            tfPrecoUnitario.setText(tblProdutos.getValueAt(tblProdutos.getSelectedRow(), 3).toString());
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Nenhuma linha selecionada", "Alerta", 2);
        }
    }//GEN-LAST:event_tblProdutosKeyReleased

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        manipulaInterface("Editar");
        if(tblProdutos.getSelectedRow() != -1)
        {
            int cod = Integer.parseInt(tfCodigoProduto.getText());
            String dec = tfDescricaoProduto.getText();
            float quant = Float.parseFloat(tfQuantidade.getText());
            float preco = Float.parseFloat(tfPrecoUnitario.getText());
            tblProdutos.setValueAt(cod, tblProdutos.getSelectedRow(), 0);
            tblProdutos.setValueAt(dec, tblProdutos.getSelectedRow(), 1);
            tblProdutos.setValueAt(quant, tblProdutos.getSelectedRow(), 2);
            tblProdutos.setValueAt(preco, tblProdutos.getSelectedRow(), 3);
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Nenhuma linha selecionada", "Alerta", 2);
        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        DefaultTableModel tabela = (DefaultTableModel) tblProdutos.getModel();
        final TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(tabela);
        tblProdutos.setRowSorter(sorter);
        int codigo = Integer.parseInt(tfCodigoProduto.getText());
        if (codigo==0)
        {
            sorter.setRowFilter(null);
        }
        else
        {
            try
            {
                sorter.setRowFilter(RowFilter.numberFilter(RowFilter.ComparisonType.EQUAL,codigo, 0));
            }
            catch (PatternSyntaxException pse)
            {
                System.out.print("Erro");
            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnImportarCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportarCSVActionPerformed
        DefaultTableModel model = (DefaultTableModel)tblProdutos.getModel();
        try {
            //Digite o diretório de pasta para gerar o arquvo.
            //Exemplo: C:\\Users\\Antônio Carlos\\Desktop\\ControleEstoque\\CadastroProduto.csv
           File file = new File("C:\\Users\\Antônio Carlos\\Desktop\\ControleEstoque\\CadastroProduto.csv");
           if (!file.exists()) {
           file.createNewFile();
           }
           FileReader fr = new FileReader(file.getAbsoluteFile());
           BufferedReader br = new BufferedReader(fr);
           String line;
           while ((line = br.readLine()) != null) {
               model.addRow(new String[] {line});
            }
           br.close();
           fr.close();
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnImportarCSVActionPerformed

    private void btnExportarCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarCSVActionPerformed
        Exportacao export = new Exportacao();
        try{
           
            //Digite o diretório de pasta para gerar o arquvo.
            //Exemplo: C:\\Users\\Antônio Carlos\\Desktop\\ControleEstoque\\CadastroProduto.csv
            export.exportacaoTabela(tblProdutos, new File("C:\\Users\\Antônio Carlos\\Desktop\\ControleEstoque\\CadastroProduto.csv"));
        } 
        catch (IOException e)
        {
            e.getMessage();
        }
    }//GEN-LAST:event_btnExportarCSVActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        DefaultTableModel tabela = (DefaultTableModel) tblProdutos.getModel();
        final TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(tabela);
        tblProdutos.setRowSorter(sorter);
        int codigo = Integer.parseInt(tfCodigoProduto.getText());
        if (codigo==0)
        {
            sorter.setRowFilter(null);
        }
        else
        {
            try
            {
                sorter.setRowFilter(RowFilter.numberFilter(RowFilter.ComparisonType.EQUAL,codigo, 0));
            }
            catch (PatternSyntaxException pse)
            {
                System.out.print("Erro");
            }
        }
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        WindowEvent we = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(we);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void tfQuantidadeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfQuantidadeKeyTyped
        if(tfQuantidade.getText().contains("-"))
        {
            tfQuantidade.setText(tfQuantidade.getText().replace("-", ""));
        }
    }//GEN-LAST:event_tfQuantidadeKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmCadastroProduto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnExportarCSV;
    private javax.swing.JButton btnImportarCSV;
    private javax.swing.JButton btnIncluir;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnSearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCodigoProduto;
    private javax.swing.JLabel lblQuantidade;
    private javax.swing.JLabel lblQuantidade1;
    private javax.swing.JLabel lbldescricaoProduto;
    private javax.swing.JPanel pnlDadosdosProdutos;
    private javax.swing.JPanel pnlFundoCadastroProdutos;
    private javax.swing.JTable tblProdutos;
    private javax.swing.JTextField tfCodigoProduto;
    private javax.swing.JTextField tfDescricaoProduto;
    private javax.swing.JFormattedTextField tfPrecoUnitario;
    private javax.swing.JTextField tfQuantidade;
    // End of variables declaration//GEN-END:variables
}
